version: "3.8"

services:
  frontend:
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    networks:
      - internal
    environment:
      - NODE_ENV=development

  proxy:
    container_name: proxy-dev
    image: caddy:alpine
    command: ["caddy", "run", "--config", "/etc/Caddyfile", "--watch"]
    ports:
      - "80:80"
    volumes:
      - ./Caddyfile.dev:/etc/Caddyfile
    networks:
      - internal
    depends_on:
      - frontend
      - backend

  backend:
    container_name: backend-dev
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_USER=root
      - DATABASE_PASSWORD=12345
      - DATABASE_NAME=database
      - RUST_BACKTRACE=1
    networks:
      - internal
    depends_on:
      - mysql

  mysql:
    container_name: mysql-dev
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: database
      MYSQL_USER: dev
      MYSQL_PASSWORD: 12345
    ports:
      - "3306:3306"
    volumes:
      - mysql-dev-data:/var/lib/mysql
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  mysql-dev-data:
    driver: local

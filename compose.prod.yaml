version: "3.8"

services:
  frontend-prod:
    container_name: frontend-prod
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    networks:
      - internal

  proxy-prod:
    container_name: proxy-prod
    image: caddy:alpine
    command: ["caddy", "run", "--config", "/etc/Caddyfile", "--watch"]
    ports:
      - "80:80"
    volumes:
      - ./Caddyfile.dev:/etc/Caddyfile
    networks:
      - internal
    depends_on:
      - frontend-prod
      - backend-prod

  backend-prod:
    container_name: backend-prod
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
    networks:
      - internal
    depends_on:
      - mysql-prod

  mysql-prod:
    container_name: mysql-prod
    image: mysql:8
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
    ports:
      - "3306:3306"
    networks:
      - internal

networks:
  internal:
    driver: bridge

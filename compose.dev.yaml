services:
  frontend-dev:
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - 5173:5173
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - internal
    depends_on:
      - mysql-dev
      - backend-dev

  proxy-dev:
    container_name: proxy-dev
    image: caddy:alpine
    command: ["caddy", "run", "--config", "/etc/Caddyfile", "--watch"]
    ports:
      - 80:80
    volumes:
      - ./Caddyfile.dev:/etc/Caddyfile
    networks:
      - internal

  backend-dev:
    container_name: backend-dev
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_USER=root
      - DATABASE_PASSWORD=12345
      - DATABASE_NAME=database
    networks:
      - internal
    depends_on:
      - mysql-dev

  mysql-dev:
    container_name: mysql-dev
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  mysql-data:
    driver: local
